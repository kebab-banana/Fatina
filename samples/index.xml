<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Samples on Fatina</title>
    <link>https://kefniark.github.io/Fatina/samples/</link>
    <description>Recent content in Samples on Fatina</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 21 May 2017 13:06:37 +0900</lastBuildDate>
    
	<atom:link href="https://kefniark.github.io/Fatina/samples/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basics Tweens</title>
      <link>https://kefniark.github.io/Fatina/samples/generic/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/generic/</guid>
      <description>.imgTest { position: relative; margin: 0; } hr { border-top: 1px dashed #8c8b8b; border-bottom: 1px dashed #fff; margin-top: 25px !important; clear: both; }   The following example are moving html elements but you can tween almost any kind of object and data. PlayAll 
Linear tween  function sample1() { var elem = document.getElementById(&#34;sample1&#34;); var obj = { x: 0, y: 0 }; Fatina.Tween(obj, [&#39;x&#39;]) .From({x: 0}) .To({x: 500}, 2500) .</description>
    </item>
    
    <item>
      <title>DOM / CSS Tweening</title>
      <link>https://kefniark.github.io/Fatina/samples/dom/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/dom/</guid>
      <description>Lorem Ipsum</description>
    </item>
    
    <item>
      <title>Pixi.js Tweening</title>
      <link>https://kefniark.github.io/Fatina/samples/pixi/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/pixi/</guid>
      <description>Few examples of Fatina working with Pixi.js (HTML 5 2D rendering engine)
Unity Chan GO!!! Parallax   var app = new PIXI.Application(1024 / 2, 768 / 2, {backgroundColor : 0x1099bb}); document.getElementById(&#39;canvas1&#39;).appendChild(app.view); // Create background with parallax CreateBackgrounds(); // Create unity chan let textures = LoadUnityChanTextures(); var unitychan = new PIXI.Sprite(textures[0]); unitychan.anchor.set(0.5); unitychan.scale.x = 1.5; unitychan.scale.y = 1.5; unitychan.x = app.renderer.width / 4; unitychan.y = app.renderer.height - 78; app.</description>
    </item>
    
    <item>
      <title>Three.js Tweening</title>
      <link>https://kefniark.github.io/Fatina/samples/threejs/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/threejs/</guid>
      <description>Lorem Ipsum</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fatina</title>
    <link>https://kefniark.github.io/Fatina/</link>
    <description>Recent content on Fatina</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 21 May 2017 13:06:37 +0900</lastBuildDate>
    
	<atom:link href="https://kefniark.github.io/Fatina/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generic Tweens</title>
      <link>https://kefniark.github.io/Fatina/samples/generic/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/generic/</guid>
      <description>.imgTest { position: relative; margin: 0; } hr { border-top: 1px dashed #8c8b8b; border-bottom: 1px dashed #fff; margin-top: 25px !important; clear: both; }   The following example are moving html elements but you can tween almost any kind of object and data. PlayAll 
Linear tween  function sample1() { var elem = document.getElementById(&#34;sample1&#34;); var obj = { x: 0, y: 0 }; Fatina.Tween(obj, [&#39;x&#39;]) .From({x: 0}) .To({x: 500}, 2500) .</description>
    </item>
    
    <item>
      <title>Benchmark</title>
      <link>https://kefniark.github.io/Fatina/basics/benchmark/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/basics/benchmark/</guid>
      <description>Coming soon &amp;hellip;</description>
    </item>
    
    <item>
      <title>DOM / CSS Tweening</title>
      <link>https://kefniark.github.io/Fatina/samples/dom/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/dom/</guid>
      <description>Lorem Ipsum</description>
    </item>
    
    <item>
      <title>Fatina API</title>
      <link>https://kefniark.github.io/Fatina/basics/api/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/basics/api/</guid>
      <description>Welcome to the API list of Fatina. (Tween, Sequence, Easing)
Fatina  Init(): void This method has to be called once to initialize fatina Pause() / Resume(): void Update(dt: number): void SetTimescale(scale: number): void Tween(obj, properties): Tween Sequence(): Sequence  See MoreFor normal usage
// Initialize Fatina (need to do that only once) Fatina.Init(); // Create a tween to move an object during 250 ms.</description>
    </item>
    
    <item>
      <title>Pixi.js Tweening</title>
      <link>https://kefniark.github.io/Fatina/samples/pixi/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/pixi/</guid>
      <description>Lorem Ipsum</description>
    </item>
    
    <item>
      <title>Three.js Tweening</title>
      <link>https://kefniark.github.io/Fatina/samples/threejs/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/threejs/</guid>
      <description>Lorem Ipsum</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://kefniark.github.io/Fatina/basics/download/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/basics/download/</guid>
      <description>Installation Download the library and include it in your code:
&amp;lt;script src=&amp;quot;fatina.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;   ``` ### More advanced users might want to... #### Use `npm` ```bash npm install Fatina ``` Then include the Fatina module with the standard node.js `require`: ```javascript var Fatina = require(&#39;Fatina&#39;); ``` And you can use Fatina as in all other samples : ```javascript var t = new Fatina.Tween( /* etc */ ); t.start(); ``` -- More coming soon &amp;hellip;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://kefniark.github.io/Fatina/basics/about/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/basics/about/</guid>
      <description> License MIT License A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.
Thanks to  Unity-chan because cute samples &amp;hellip;  Why this name ?  F* Tina: No comment &amp;hellip; Fat Tina: Because everyone know that typescript is heavy and slow Reference to Fatina from Tower of Druaga    </description>
    </item>
    
  </channel>
</rss>
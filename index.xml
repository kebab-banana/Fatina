<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fatina</title>
    <link>https://kefniark.github.io/Fatina/</link>
    <description>Recent content on Fatina</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 21 May 2017 13:06:37 +0900</lastBuildDate>
    
	<atom:link href="https://kefniark.github.io/Fatina/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basics Samples</title>
      <link>https://kefniark.github.io/Fatina/samples/generic/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/generic/</guid>
      <description>.imgTest { position: relative; margin: 0; } hr { border-top: 1px dashed #8c8b8b; border-bottom: 1px dashed #fff; margin-top: 25px !important; clear: both; }   The following example are moving html elements but you can tween almost any kind of object and data. PlayAll 
Linear tween function sample1() {var elem = document.getElementById(&#34;sample1&#34;);var obj = { x: 0, y: 0 };Fatina.Tween(obj, [&#39;x&#39;]).From({x: 0}).To({x: 500}, 2500).</description>
    </item>
    
    <item>
      <title>Games Samples</title>
      <link>https://kefniark.github.io/Fatina/samples/game/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/game/</guid>
      <description>Few examples of Fatina working with Pixi.js (HTML 5 2D rendering engine).  Those are just samples, not real games :P Thanks Unity-chan for her help 
Unity Chan GO!!! Parallax var app = new PIXI.Application(1024 / 2, 768 / 2, {backgroundColor : 0x1099bb});document.getElementById(&#39;canvas1&#39;).appendChild(app.view);// Create background with parallaxCreateBackgrounds();// Create unity chanlet textures = LoadUnityChanTextures();var unitychan = new PIXI.Sprite(textures[0]);unitychan.anchor.set(0.5);unitychan.scale.x = 1.</description>
    </item>
    
    <item>
      <title>Benchmark</title>
      <link>https://kefniark.github.io/Fatina/basics/benchmark/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/basics/benchmark/</guid>
      <description>Tween counter: ~0kRun AllWhat is happening here:Bellow, 4 scenario are tested over different configuration / libraries:1. Normal usage : 200 tween over 100 frames x 50 times2. Medium usage : 5000 tween over 100 frames x 10 times3. Heavy usage : 20000 tween over 100 frames x 5 times (to test many concurrent tween)4. Long duration usage : 1000 tween over 500 frames x 100 times (to test long term usage and GC)Each scenario run 5 times to have more accurate estimation.</description>
    </item>
    
    <item>
      <title>Fatina API</title>
      <link>https://kefniark.github.io/Fatina/api/basic/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/api/basic/</guid>
      <description>Fatina Tween Sequence  Fatina Init The first time you create a tween, Fatina will initialize itself automatically, using default values. If instead you prefer to initialize it yourself (recommended), call the method .Init() once, BEFORE creating any tween (calling it afterwards will have no effect). Controls  Pause() / Resume(): void SetTimescale(scale: number): void  Methods  Init(): void This method has to be called once to initialize Fatina Update(dt: number): void Tween(obj, properties): Tween Method used to create new tween Sequence(): Sequence Method used to create new sequence Ticker(name: string): ITicker  See MoreFor normal usage</description>
    </item>
    
    <item>
      <title>Advanced Samples</title>
      <link>https://kefniark.github.io/Fatina/samples/advanced/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/samples/advanced/</guid>
      <description>Few examples of Fatina working with Pixi.js (HTML 5 2D rendering engine)
Demonic Star Looping Sequence var app = new PIXI.Application(1024 / 2, 768 / 2, {backgroundColor : 0x000000});document.getElementById(&#39;canvas2&#39;).appendChild(app.view);var star = new PIXI.Container();star.x += 100;star.y += 50;app.stage.addChild(star);// Create 250 spritesfor (let i = 0; i A demonic star with 250 moving sprites along a defined path
Read the code
Golden Stars Use Modifier for curve and gravity var app4 = new PIXI.</description>
    </item>
    
    <item>
      <title>Tween API</title>
      <link>https://kefniark.github.io/Fatina/api/tween/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/api/tween/</guid>
      <description>Fatina Tween Sequence   A Tween that takes control of values and animates them.
 Properties  elapsed: number number of ms. elapsed for this tween (affected by pause &amp;amp; timescale) duration: number duration of this tween in ms.  Controls  Start(): Tween By default new tween are not started. Don&amp;rsquo;t forget to call .Start() Pause(): void Resume(): void Skip(): void Kill(): void  See More// Create a tween let tween = Fatina.</description>
    </item>
    
    <item>
      <title>Sequence API</title>
      <link>https://kefniark.github.io/Fatina/api/sequence/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/api/sequence/</guid>
      <description>Fatina Tween Sequence   A Sequence is special tween that, instead of taking control of a value, takes control of other tweens and animates them as a group.
 Properties  elapsed: number number of ms. elapsed for this sequence (affected by pause &amp;amp; timescale)  Controls  Start(): Sequence By default new tween are not started. Don&amp;rsquo;t forget to call .Start() Pause(): void Resume(): void Kill(): void  Callbacks  OnStart(cb: () =&amp;gt; void): Sequence; OnStepStart(cb: (tween: ITween | IPlayable) =&amp;gt; void): Sequence Emitted when a tween start OnStepEnd(cb: (index: ITween | IPlayable) =&amp;gt; void): Sequence Emitted when a tween is completed.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://kefniark.github.io/Fatina/basics/download/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/basics/download/</guid>
      <description>Installation Download the library and include it in your code:
&amp;lt;script src=&amp;quot;fatina.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  
More advanced users might want to use npm npm install fatina  Then include the Fatina module with the standard node.js require:
var Fatina = require(&#39;fatina&#39;);  And you can use Fatina as in all other samples :
Fatina.Tween( /* etc */ ).Start();  
API Doc Samples</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://kefniark.github.io/Fatina/basics/about/</link>
      <pubDate>Sun, 21 May 2017 13:06:37 +0900</pubDate>
      
      <guid>https://kefniark.github.io/Fatina/basics/about/</guid>
      <description> License MIT License A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.
Thanks to  Unity-chan because cute samples &amp;hellip;  Why this name ?  F* Tina: No comment &amp;hellip; Fat Tina: Because everyone know that typescript is heavy and slow Reference to Fatina from Tower of Druaga    </description>
    </item>
    
  </channel>
</rss>